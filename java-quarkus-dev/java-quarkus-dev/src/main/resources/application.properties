quarkus.rest-client.situacao-cadastral-api.url=http://${QUARKUS_CLIENT_HTTP:localhost}:${QUARKUS_CLIENT_HTTP_PORT:8181}

# ======================
# CONEXÃO COM POSTGRESQL
# ======================

quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = ${QUARKUS_DATASOURCE_USERNAME:postgres}
quarkus.datasource.password = ${QUARKUS_DATASOURCE_PASSWORD:bh123456}
quarkus.datasource.jdbc.url = jdbc:postgresql://${QUARKUS_DATASOURCE_HOST:localhost}:${QUARKUS_DATASOURCE_PORT:5432}/estudos_java_quarkus_alura

# Habilita o pool de conexões (opcional)
quarkus.datasource.jdbc.min-size=3
quarkus.datasource.jdbc.max-size=13

# Habilita o Hibernate ORM (caso esteja usando JPA)
quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.log.sql=true

# Ativa o Micrometer com Prometheus
quarkus.micrometer.export.prometheus.enabled=true

# Define o endpoint onde as métricas serão expostas
quarkus.micrometer.export.prometheus.path=/metrics

# Ativa as métricas padrão da JVM, sistema e HTTP
quarkus.micrometer.binder.jvm.enabled=true
quarkus.micrometer.binder.system.enabled=true
quarkus.micrometer.binder.http-server.enabled=true
